// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ntrip.proto

package open.demo.common.pojo;

public final class NtripDataProto {
  private NtripDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NtripDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NtripData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 messsageType = 1;</code>
     * @return The messsageType.
     */
    int getMesssageType();

    /**
     * <code>int32 satelliteId = 2;</code>
     * @return The satelliteId.
     */
    int getSatelliteId();

    /**
     * <code>double orbitCorrection = 3;</code>
     * @return The orbitCorrection.
     */
    double getOrbitCorrection();

    /**
     * <code>double clockCorrection = 4;</code>
     * @return The clockCorrection.
     */
    double getClockCorrection();

    /**
     * <code>double phaseCorrection = 5;</code>
     * @return The phaseCorrection.
     */
    double getPhaseCorrection();

    /**
     * <code>double atmosphericCorrection = 6;</code>
     * @return The atmosphericCorrection.
     */
    double getAtmosphericCorrection();
  }
  /**
   * Protobuf type {@code NtripData}
   */
  public static final class NtripData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NtripData)
      NtripDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NtripData.newBuilder() to construct.
    private NtripData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NtripData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NtripData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return open.demo.common.pojo.NtripDataProto.internal_static_NtripData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return open.demo.common.pojo.NtripDataProto.internal_static_NtripData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              open.demo.common.pojo.NtripDataProto.NtripData.class, open.demo.common.pojo.NtripDataProto.NtripData.Builder.class);
    }

    public static final int MESSSAGETYPE_FIELD_NUMBER = 1;
    private int messsageType_;
    /**
     * <code>int32 messsageType = 1;</code>
     * @return The messsageType.
     */
    @java.lang.Override
    public int getMesssageType() {
      return messsageType_;
    }

    public static final int SATELLITEID_FIELD_NUMBER = 2;
    private int satelliteId_;
    /**
     * <code>int32 satelliteId = 2;</code>
     * @return The satelliteId.
     */
    @java.lang.Override
    public int getSatelliteId() {
      return satelliteId_;
    }

    public static final int ORBITCORRECTION_FIELD_NUMBER = 3;
    private double orbitCorrection_;
    /**
     * <code>double orbitCorrection = 3;</code>
     * @return The orbitCorrection.
     */
    @java.lang.Override
    public double getOrbitCorrection() {
      return orbitCorrection_;
    }

    public static final int CLOCKCORRECTION_FIELD_NUMBER = 4;
    private double clockCorrection_;
    /**
     * <code>double clockCorrection = 4;</code>
     * @return The clockCorrection.
     */
    @java.lang.Override
    public double getClockCorrection() {
      return clockCorrection_;
    }

    public static final int PHASECORRECTION_FIELD_NUMBER = 5;
    private double phaseCorrection_;
    /**
     * <code>double phaseCorrection = 5;</code>
     * @return The phaseCorrection.
     */
    @java.lang.Override
    public double getPhaseCorrection() {
      return phaseCorrection_;
    }

    public static final int ATMOSPHERICCORRECTION_FIELD_NUMBER = 6;
    private double atmosphericCorrection_;
    /**
     * <code>double atmosphericCorrection = 6;</code>
     * @return The atmosphericCorrection.
     */
    @java.lang.Override
    public double getAtmosphericCorrection() {
      return atmosphericCorrection_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messsageType_ != 0) {
        output.writeInt32(1, messsageType_);
      }
      if (satelliteId_ != 0) {
        output.writeInt32(2, satelliteId_);
      }
      if (java.lang.Double.doubleToRawLongBits(orbitCorrection_) != 0) {
        output.writeDouble(3, orbitCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(clockCorrection_) != 0) {
        output.writeDouble(4, clockCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(phaseCorrection_) != 0) {
        output.writeDouble(5, phaseCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(atmosphericCorrection_) != 0) {
        output.writeDouble(6, atmosphericCorrection_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messsageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, messsageType_);
      }
      if (satelliteId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, satelliteId_);
      }
      if (java.lang.Double.doubleToRawLongBits(orbitCorrection_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, orbitCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(clockCorrection_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, clockCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(phaseCorrection_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, phaseCorrection_);
      }
      if (java.lang.Double.doubleToRawLongBits(atmosphericCorrection_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, atmosphericCorrection_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof open.demo.common.pojo.NtripDataProto.NtripData)) {
        return super.equals(obj);
      }
      open.demo.common.pojo.NtripDataProto.NtripData other = (open.demo.common.pojo.NtripDataProto.NtripData) obj;

      if (getMesssageType()
          != other.getMesssageType()) return false;
      if (getSatelliteId()
          != other.getSatelliteId()) return false;
      if (java.lang.Double.doubleToLongBits(getOrbitCorrection())
          != java.lang.Double.doubleToLongBits(
              other.getOrbitCorrection())) return false;
      if (java.lang.Double.doubleToLongBits(getClockCorrection())
          != java.lang.Double.doubleToLongBits(
              other.getClockCorrection())) return false;
      if (java.lang.Double.doubleToLongBits(getPhaseCorrection())
          != java.lang.Double.doubleToLongBits(
              other.getPhaseCorrection())) return false;
      if (java.lang.Double.doubleToLongBits(getAtmosphericCorrection())
          != java.lang.Double.doubleToLongBits(
              other.getAtmosphericCorrection())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMesssageType();
      hash = (37 * hash) + SATELLITEID_FIELD_NUMBER;
      hash = (53 * hash) + getSatelliteId();
      hash = (37 * hash) + ORBITCORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOrbitCorrection()));
      hash = (37 * hash) + CLOCKCORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClockCorrection()));
      hash = (37 * hash) + PHASECORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPhaseCorrection()));
      hash = (37 * hash) + ATMOSPHERICCORRECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAtmosphericCorrection()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static open.demo.common.pojo.NtripDataProto.NtripData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(open.demo.common.pojo.NtripDataProto.NtripData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NtripData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NtripData)
        open.demo.common.pojo.NtripDataProto.NtripDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return open.demo.common.pojo.NtripDataProto.internal_static_NtripData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return open.demo.common.pojo.NtripDataProto.internal_static_NtripData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                open.demo.common.pojo.NtripDataProto.NtripData.class, open.demo.common.pojo.NtripDataProto.NtripData.Builder.class);
      }

      // Construct using open.demo.common.pojo.NtripDataProto.NtripData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        messsageType_ = 0;

        satelliteId_ = 0;

        orbitCorrection_ = 0D;

        clockCorrection_ = 0D;

        phaseCorrection_ = 0D;

        atmosphericCorrection_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return open.demo.common.pojo.NtripDataProto.internal_static_NtripData_descriptor;
      }

      @java.lang.Override
      public open.demo.common.pojo.NtripDataProto.NtripData getDefaultInstanceForType() {
        return open.demo.common.pojo.NtripDataProto.NtripData.getDefaultInstance();
      }

      @java.lang.Override
      public open.demo.common.pojo.NtripDataProto.NtripData build() {
        open.demo.common.pojo.NtripDataProto.NtripData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public open.demo.common.pojo.NtripDataProto.NtripData buildPartial() {
        open.demo.common.pojo.NtripDataProto.NtripData result = new open.demo.common.pojo.NtripDataProto.NtripData(this);
        result.messsageType_ = messsageType_;
        result.satelliteId_ = satelliteId_;
        result.orbitCorrection_ = orbitCorrection_;
        result.clockCorrection_ = clockCorrection_;
        result.phaseCorrection_ = phaseCorrection_;
        result.atmosphericCorrection_ = atmosphericCorrection_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof open.demo.common.pojo.NtripDataProto.NtripData) {
          return mergeFrom((open.demo.common.pojo.NtripDataProto.NtripData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(open.demo.common.pojo.NtripDataProto.NtripData other) {
        if (other == open.demo.common.pojo.NtripDataProto.NtripData.getDefaultInstance()) return this;
        if (other.getMesssageType() != 0) {
          setMesssageType(other.getMesssageType());
        }
        if (other.getSatelliteId() != 0) {
          setSatelliteId(other.getSatelliteId());
        }
        if (other.getOrbitCorrection() != 0D) {
          setOrbitCorrection(other.getOrbitCorrection());
        }
        if (other.getClockCorrection() != 0D) {
          setClockCorrection(other.getClockCorrection());
        }
        if (other.getPhaseCorrection() != 0D) {
          setPhaseCorrection(other.getPhaseCorrection());
        }
        if (other.getAtmosphericCorrection() != 0D) {
          setAtmosphericCorrection(other.getAtmosphericCorrection());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                messsageType_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                satelliteId_ = input.readInt32();

                break;
              } // case 16
              case 25: {
                orbitCorrection_ = input.readDouble();

                break;
              } // case 25
              case 33: {
                clockCorrection_ = input.readDouble();

                break;
              } // case 33
              case 41: {
                phaseCorrection_ = input.readDouble();

                break;
              } // case 41
              case 49: {
                atmosphericCorrection_ = input.readDouble();

                break;
              } // case 49
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int messsageType_ ;
      /**
       * <code>int32 messsageType = 1;</code>
       * @return The messsageType.
       */
      @java.lang.Override
      public int getMesssageType() {
        return messsageType_;
      }
      /**
       * <code>int32 messsageType = 1;</code>
       * @param value The messsageType to set.
       * @return This builder for chaining.
       */
      public Builder setMesssageType(int value) {
        
        messsageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 messsageType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMesssageType() {
        
        messsageType_ = 0;
        onChanged();
        return this;
      }

      private int satelliteId_ ;
      /**
       * <code>int32 satelliteId = 2;</code>
       * @return The satelliteId.
       */
      @java.lang.Override
      public int getSatelliteId() {
        return satelliteId_;
      }
      /**
       * <code>int32 satelliteId = 2;</code>
       * @param value The satelliteId to set.
       * @return This builder for chaining.
       */
      public Builder setSatelliteId(int value) {
        
        satelliteId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 satelliteId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSatelliteId() {
        
        satelliteId_ = 0;
        onChanged();
        return this;
      }

      private double orbitCorrection_ ;
      /**
       * <code>double orbitCorrection = 3;</code>
       * @return The orbitCorrection.
       */
      @java.lang.Override
      public double getOrbitCorrection() {
        return orbitCorrection_;
      }
      /**
       * <code>double orbitCorrection = 3;</code>
       * @param value The orbitCorrection to set.
       * @return This builder for chaining.
       */
      public Builder setOrbitCorrection(double value) {
        
        orbitCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double orbitCorrection = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrbitCorrection() {
        
        orbitCorrection_ = 0D;
        onChanged();
        return this;
      }

      private double clockCorrection_ ;
      /**
       * <code>double clockCorrection = 4;</code>
       * @return The clockCorrection.
       */
      @java.lang.Override
      public double getClockCorrection() {
        return clockCorrection_;
      }
      /**
       * <code>double clockCorrection = 4;</code>
       * @param value The clockCorrection to set.
       * @return This builder for chaining.
       */
      public Builder setClockCorrection(double value) {
        
        clockCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double clockCorrection = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClockCorrection() {
        
        clockCorrection_ = 0D;
        onChanged();
        return this;
      }

      private double phaseCorrection_ ;
      /**
       * <code>double phaseCorrection = 5;</code>
       * @return The phaseCorrection.
       */
      @java.lang.Override
      public double getPhaseCorrection() {
        return phaseCorrection_;
      }
      /**
       * <code>double phaseCorrection = 5;</code>
       * @param value The phaseCorrection to set.
       * @return This builder for chaining.
       */
      public Builder setPhaseCorrection(double value) {
        
        phaseCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double phaseCorrection = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhaseCorrection() {
        
        phaseCorrection_ = 0D;
        onChanged();
        return this;
      }

      private double atmosphericCorrection_ ;
      /**
       * <code>double atmosphericCorrection = 6;</code>
       * @return The atmosphericCorrection.
       */
      @java.lang.Override
      public double getAtmosphericCorrection() {
        return atmosphericCorrection_;
      }
      /**
       * <code>double atmosphericCorrection = 6;</code>
       * @param value The atmosphericCorrection to set.
       * @return This builder for chaining.
       */
      public Builder setAtmosphericCorrection(double value) {
        
        atmosphericCorrection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double atmosphericCorrection = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtmosphericCorrection() {
        
        atmosphericCorrection_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NtripData)
    }

    // @@protoc_insertion_point(class_scope:NtripData)
    private static final open.demo.common.pojo.NtripDataProto.NtripData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new open.demo.common.pojo.NtripDataProto.NtripData();
    }

    public static open.demo.common.pojo.NtripDataProto.NtripData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NtripData>
        PARSER = new com.google.protobuf.AbstractParser<NtripData>() {
      @java.lang.Override
      public NtripData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NtripData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NtripData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public open.demo.common.pojo.NtripDataProto.NtripData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NtripData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NtripData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Ntrip.proto\"\240\001\n\tNtripData\022\024\n\014messsageT" +
      "ype\030\001 \001(\005\022\023\n\013satelliteId\030\002 \001(\005\022\027\n\017orbitC" +
      "orrection\030\003 \001(\001\022\027\n\017clockCorrection\030\004 \001(\001" +
      "\022\027\n\017phaseCorrection\030\005 \001(\001\022\035\n\025atmospheric" +
      "Correction\030\006 \001(\001B\'\n\025open.demo.common.poj" +
      "oB\016NtripDataProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_NtripData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_NtripData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NtripData_descriptor,
        new java.lang.String[] { "MesssageType", "SatelliteId", "OrbitCorrection", "ClockCorrection", "PhaseCorrection", "AtmosphericCorrection", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
